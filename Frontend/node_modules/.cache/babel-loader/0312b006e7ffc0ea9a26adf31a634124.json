{"ast":null,"code":"var _jsxFileName = \"/Users/ajay/Desktop/Project2/BibSense/frontendFolder/src/components/Home/Home.js\";\nimport React, { Component } from \"react\";\nimport Select from 'react-select';\nimport AsyncSelect from 'react-async-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchOption: \"\",\n      runners: [],\n      event_name: [],\n      uniq_event: [],\n      name: \"\",\n      bib_number: 0\n    };\n  }\n\n  async handleSearch() {\n    fetch(\"http://localhost:3001\").then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json().then(data => {\n        const options = data.map(x => ({\n          label: x.event_name\n        }));\n        const uniqueOptions = [...new Set(options)];\n        console.log(uniqueOptions); // const options2 = options.filter((item,index) => array(indexOf(item) === index));\n\n        const unique = [...new Set(data.map(item => item.event_name))];\n        const uniq = options; // console.log(options.filter(x=> x.event_name))\n        // console.log(data.map(x => x.bib_number));\n        // const options = data.map(d => ({\n        //   \"label\" :  d.event_name,\n        //   \"value\" : d.event_name\n        // }))\n\n        const u = this.getUnique(options, \"label\");\n        console.log(u);\n        this.setState({\n          event_name: u\n        }); // console.log(this.state.event_name[0])\n\n        this.setState({\n          uniq_event: this.state.event_name\n        }); // console.log(this.state.uniq_event)\n        // this.setState({event_name: data.map(x=>x.event_name)})\n        // console.log(this.state.event_name)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this.handleSearch();\n  }\n\n  getUnique(arr, comp) {\n    // store the comparison  values in array\n    const unique = arr.map(e => e[comp]) // store the indexes of the unique objects\n    .map((e, i, final) => final.indexOf(e) === i && i) // eliminate the false indexes & return unique objects\n    .filter(e => arr[e]).map(e => arr[e]);\n    return unique;\n  }\n\n  render() {\n    const {\n      runners,\n      searchOption,\n      event_name,\n      aquaticCreatures,\n      uniq_event\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Enter Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: event_name // onChange={(option) => console.log(option.label, option.value)}\n            ,\n            onChange: opt => window.location.assign(\"/bib\"),\n            defaultOptions: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Home; // // FOR AsyncSelect \n// handleSearch = (inputValue, callback) => {\n//   if (!inputValue) {\n//     callback([]);\n//   } else {\n//     setTimeout(() => {\n//       fetch(\"http://localhost:3001\", {\n//         method: \"GET\",\n//       })\n//         .then((res) => {\n//           return res.json();\n//         })\n//         .then((data) => {\n//           console.log(data);\n//           const tempArray = [];\n//           data.forEach((element) => {\n//             tempArray.push({\n//               label: element.event_name,\n//               value: element.bib_number,\n//             });\n//           });\n//           callback(tempArray);\n//         })\n//         .catch((error) => {\n//           console.log(error, \"fetch error\");\n//         });\n//     });\n//   }\n// };\n// searchOption = (selectedOption) => {\n//   if (selectedOption) {\n//     this.setState({\n//       selectedOption,\n//     });\n//   }\n//   window.location.assign(\"/bib\")\n// };\n// <div>\n//            <AsyncSelect\n//                 value={this.state.selectedOption}\n//                 loadOptions={this.searchOption}\n//                 onChange={(e) => {\n//                     this.searchOption(e);\n//                 }}\n//                 defaultOptions={false}\n//                 />\n//       </div>","map":{"version":3,"sources":["/Users/ajay/Desktop/Project2/BibSense/frontendFolder/src/components/Home/Home.js"],"names":["React","Component","Select","AsyncSelect","Home","constructor","props","state","searchOption","runners","event_name","uniq_event","name","bib_number","handleSearch","fetch","then","response","ok","Error","statusText","json","data","options","map","x","label","uniqueOptions","Set","console","log","unique","item","uniq","u","getUnique","setState","catch","err","componentDidMount","arr","comp","e","i","final","indexOf","filter","render","aquaticCreatures","opt","window","location","assign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Select from 'react-select';\nimport AsyncSelect from 'react-async-select';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchOption: \"\",\n      runners: [],\n      event_name: [],\n      uniq_event: [],\n      name: \"\",\n      bib_number: 0,\n\n    };\n  }\n\n  async handleSearch() {\n    fetch(\"http://localhost:3001\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json().then((data) => {\n          const options = data.map((x) => ({ label: x.event_name }));\n          const uniqueOptions = [...new Set(options)];\n          console.log(uniqueOptions);\n          // const options2 = options.filter((item,index) => array(indexOf(item) === index));\n          const unique = [...new Set(data.map((item) => item.event_name))];\n          const uniq = options;\n  \n          // console.log(options.filter(x=> x.event_name))\n          // console.log(data.map(x => x.bib_number));\n          // const options = data.map(d => ({\n\n          //   \"label\" :  d.event_name,\n          //   \"value\" : d.event_name\n          // }))\n\n          const u = this.getUnique(options, \"label\")\n          console.log(u);\n\n          this.setState({ event_name: u });\n          // console.log(this.state.event_name[0])\n          this.setState({ uniq_event: this.state.event_name });\n          // console.log(this.state.uniq_event)\n          // this.setState({event_name: data.map(x=>x.event_name)})\n          // console.log(this.state.event_name)\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    this.handleSearch();\n  }\n  getUnique(arr, comp) {\n    // store the comparison  values in array\n    const unique = arr\n      .map((e) => e[comp])\n      // store the indexes of the unique objects\n      .map((e, i, final) => final.indexOf(e) === i && i)\n      // eliminate the false indexes & return unique objects\n      .filter((e) => arr[e])\n      .map((e) => arr[e]);\n\n    return unique;\n  }\n\n  render() {\n    const { runners, searchOption, event_name, aquaticCreatures, uniq_event } =\n      this.state;\n\n    return (\n      <>\n        <div className=\"container-fluid\">\n          <div className = \"select-container\">\n            <h3> Enter Event</h3>\n              <Select\n                options={event_name}\n                // onChange={(option) => console.log(option.label, option.value)}\n                onChange={(opt) => window.location.assign(\"/bib\")}\n                defaultOptions={false}\n              />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default Home;\n\n\n\n\n\n\n\n\n\n// // FOR AsyncSelect \n\n// handleSearch = (inputValue, callback) => {\n//   if (!inputValue) {\n//     callback([]);\n//   } else {\n//     setTimeout(() => {\n//       fetch(\"http://localhost:3001\", {\n//         method: \"GET\",\n//       })\n//         .then((res) => {\n//           return res.json();\n//         })\n//         .then((data) => {\n//           console.log(data);\n//           const tempArray = [];\n//           data.forEach((element) => {\n//             tempArray.push({\n//               label: element.event_name,\n//               value: element.bib_number,\n              \n//             });\n//           });\n//           callback(tempArray);\n//         })\n//         .catch((error) => {\n//           console.log(error, \"fetch error\");\n//         });\n//     });\n//   }\n// };\n\n// searchOption = (selectedOption) => {\n//   if (selectedOption) {\n//     this.setState({\n//       selectedOption,\n//     });\n//   }\n//   window.location.assign(\"/bib\")\n// };\n\n\n// <div>\n//            <AsyncSelect\n//                 value={this.state.selectedOption}\n//                 loadOptions={this.searchOption}\n//                 onChange={(e) => {\n//                     this.searchOption(e);\n//                 }}\n//                 defaultOptions={false}\n//                 />\n//       </div>\n\n      \n\n\n"]},"metadata":{},"sourceType":"module"}